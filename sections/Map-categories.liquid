{%- render 'section-spacing-collapsing' -%}

{%- assign jsonUrl = section.settings.url_json -%}


<style>
  #shopify-section-{{ section.id }} {
  }
  #shopify-section-{{ section.id }} .map-div {
    position: relative;
    overflow: hidden;
  }
  #shopify-section-{{ section.id }} #sidebar {
    width: 308px;
    max-width: 100%;
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    transition: all 500ms ease-in-out;
    transform: translateX(-100%);
    background-color: #fafafa;
    box-shadow: inset 1px 1px 0 rgba(0,0,0,.1), inset 0 -1px 0 rgba(0,0,0,.07);
    padding: 12px 20px;
  }
  #shopify-section-{{ section.id }} #sidebar #sidebar-content {
    display: flex;
    flex-direction: column;
    gap: 30px;
    overflow: auto;
    
  }
  #shopify-section-{{ section.id }} #sidebar #sidebar-content h2{
    font-family: VolteRounded,sans-serif;
    font-weight: 700;
    font-size: 24px;
    color: #004228;
  }
  #shopify-section-{{ section.id }} #sidebar #sidebar-quit{
    position: absolute;
    right: 20px;
    top: 20px;
    cursor: pointer;
  }
  #shopify-section-{{ section.id }} #sidebar #sidebar-content strong{
    color: #004228;
  }
  #shopify-section-{{ section.id }} #sidebar.active {
    transform: translateX(0);
  }
  #shopify-section-{{ section.id }}  #map-container {
    height: 500px; /* Ajusta la altura según tus necesidades */
  }
  #shopify-section-{{ section.id }}  #map-tab-categories {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
    margin-bottom: 20px;
  }
  .button__categories-filter.active{
    background-color: transparent;
    border: 1px solid #026338;
    color: #026338;
  }
</style>

<div {% render 'section-properties' %}>
  <div id="map-tab-categories"></div>
  <div class="map-div">
    <div id="map-container"></div>
    <div id="sidebar">
      <svg id="sidebar-quit"  fill="#000000" height="10px" width="10px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 460.775 460.775" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M285.08,230.397L456.218,59.27c6.076-6.077,6.076-15.911,0-21.986L423.511,4.565c-2.913-2.911-6.866-4.55-10.992-4.55 c-4.127,0-8.08,1.639-10.993,4.55l-171.138,171.14L59.25,4.565c-2.913-2.911-6.866-4.55-10.993-4.55 c-4.126,0-8.08,1.639-10.992,4.55L4.558,37.284c-6.077,6.075-6.077,15.909,0,21.986l171.138,171.128L4.575,401.505 c-6.074,6.077-6.074,15.911,0,21.986l32.709,32.719c2.911,2.911,6.865,4.55,10.992,4.55c4.127,0,8.08-1.639,10.994-4.55 l171.117-171.12l171.118,171.12c2.913,2.911,6.866,4.55,10.993,4.55c4.128,0,8.081-1.639,10.992-4.55l32.709-32.719 c6.074-6.075,6.074-15.909,0-21.986L285.08,230.397z"></path> </g></svg>
      <div id="sidebar-content">
          <!-- Los datos del marcador se mostrarán aquí -->
      </div>
    </div>
  </div>
</div>
{%- comment -%}On the FAQ page, we also output the content with JSON microdata for SEO{%- endcomment -%}
<script>
    // URL del archivo JSON
    var jsonUrl = "{{ jsonUrl | escape }}";
    var selectedMarker;
    var markers = [];

    initMap();
    // Inicializar el mapa
    function initMap() {
      // Crear un nuevo mapa de Google
      var center = { lat: -33.83155, lng: -70.706332 };
      var map = new google.maps.Map(document.getElementById('map-container'), {
        zoom: 10, // Ajusta el nivel de zoom según tus necesidades
        center: center, // Centrar el mapa en una ubicación inicial
      });

      // Obtener los datos del JSON y agregar marcadores al mapa
      fetch(jsonUrl)
        .then(response => response.json())
        .then(data => {
          var bounds = new google.maps.LatLngBounds();

          data.forEach(item => {
            // Verificar que el objeto tenga latitud y longitud
            if (item.lat && item.lng) {
              // Crear un marcador en el mapa
              var marker = new google.maps.Marker({
                  position: { lat: parseFloat(item.lat), lng: parseFloat(item.lng) },
                  map: map,
                  title: item.title || 'Marcador',
                  data: item, // Adjunta los datos del marcador al marcador mismo
                });
                marker.setIcon('https://cdn.shopify.com/s/files/1/0280/0854/6397/files/map-pin.png?v=1700192774');

             // Agrega un evento de clic al marcador
              marker.addListener('click', function () {
                if (selectedMarker) {
                }
                selectedMarker = marker;
                closeSidebar(); // Cierra el sidebar si está abierto
                showMarkerData(marker.data); // Muestra los datos en el sidebar al hacer clic
              });
              markers.push(marker);
              bounds.extend(marker.getPosition());
            }
          });
          map.fitBounds(bounds);
          const urlParams = new URLSearchParams(window.location.search);
            const initialCategoriaID = urlParams.get('category_id') || 'all';

            renderTabs();
            setActiveButton(initialCategoriaID);
            filterMarkers(initialCategoriaID);
        })
        .catch(error => console.error('Error al cargar el JSON:', error));
      // Agregar evento de clic al mapa para cerrar el sidebar
      map.addListener('click', function () {
        closeSidebar();
      });

      const buttonClose = document.querySelector('#sidebar-quit');
      if(buttonClose){
        buttonClose.addEventListener("click", (e) =>{
          closeSidebar();
        })
      }
    }
    function renderTabs() {
      const tabCategories = document.querySelector('#map-tab-categories');
      if (tabCategories) {
        const categoriesList = [];
        let activeButton = null;

        markers.forEach(marker => {
          const category = marker.data['Categoria'];

          if (!categoriesList.includes(category)) {
            const button = document.createElement('button');
            button.classList.add('button__categories-filter');
            button.classList.add('button');
            button.textContent = category;

            const CategoriaID = marker.data['CategoriaID'];
            button.dataset.categoriaId = CategoriaID;

            button.addEventListener('click', function () {
              const activeButton2 = document.querySelector('.button__categories-filter.active');
              if (activeButton2) {
                activeButton2.classList.remove('active');
              }

              button.classList.add('active');
              activeButton = button;

              filterMarkers(CategoriaID);

              // Modifica la URL al hacer clic en el botón
              updateURLParameter('category_id', CategoriaID);
            });

            categoriesList.push(category);
            tabCategories.appendChild(button);
          }
        });
      }
    }

function filterMarkers(CategoriaID) {
  markers.forEach(marker => {
    if (CategoriaID === 'all' || marker.data['CategoriaID'] === CategoriaID) {
      marker.setVisible(true);
    } else {
      marker.setVisible(false);
    }
  });
}

function updateURLParameter(key, value) {
  const urlParams = new URLSearchParams(window.location.search);
  urlParams.set(key, value);

  // Modifica la URL sin recargar la página
  const newURL = window.location.pathname + '?' + urlParams.toString();
  window.history.replaceState({}, '', newURL);
}

function setActiveButton(CategoriaID) {
  const activeButton = document.querySelector('.button__categories-filter.active');
  if (activeButton) {
    activeButton.classList.remove('active');
  }

  const buttons = document.querySelectorAll('.button__categories-filter');
  buttons.forEach(button => {
    if (button.dataset.categoriaId === CategoriaID) {
      button.classList.add('active');
      
    }
  });
}

    function showMarkerData(data) {
      var sidebar = document.getElementById('sidebar');
      var sidebarContent = document.getElementById('sidebar-content');
      console.log('data', data);
      sidebarContent.innerHTML = `
          <h2>${data["Nombre"]}</h2>
          <p><strong>Cadena:</strong> ${data["Cadena"]}</p>
          <p><strong>Comuna:</strong> ${data["Comuna"]}</p>
          <p><strong>Region:</strong> ${data["Region"]}</p>
          <p><strong>Descripción Local:</strong> ${data["Descripción Local"]}</p>
          <p><strong>Direccion:</strong> ${data["Direccion"]}</p>
      `;
      sidebar.classList.add('active')
    }
    
    function closeSidebar() {
      if (sidebar.classList.contains('active')) {
        sidebar.classList.remove('active');
      }
      if (selectedMarker) {
        // selectedMarker.setIcon(null); // Restaura el icono del marcador previamente seleccionado al cerrar el sidebar
        selectedMarker = null;
      }
    }
  </script>

{% schema %}
{
  "name": "Map Categories",
  "class": "shopify-section--map-categories",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "custom.overlay"]
  },
  "settings": [
    {
      "type": "text",
      "id": "url_json",
      "label": "URL Json"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": true
    },
    {
      "type": "richtext",
      "id": "title",
      "label": "Heading"
    }
  ],
  "presets": [
    {
      "name": "Map Categories"
    }
  ]
}
{% endschema %}