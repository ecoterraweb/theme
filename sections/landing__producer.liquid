<style>
  .text-center {
    text-align: center;
    margin: auto;
  }
  .landing__producer {
    padding: 60px 0;
  }
  .landing__producer--head {
    gap: 40px;
  }
  .container {
    max-width: 1200px;
    padding-left: 15px;
    padding-right: 15px;
    margin: auto;
  }
  .landing__producer--head {
    width: 100%;
  }
  .landing__producer--head_title {
    font-size: 64px;
    margin-bottom: 30px;
  }
  .landing__producer--head_text {
    margin-bottom: 20px;
  }
  .landing__producer--subtitle {
    text-align: center;
    margin: 40px auto 20px;
    font-size: 40px;
    width: 100%;
  }
  .landing__producer--boxes {
    display: flex;
    width: 100%;
    justify-content: space-around;
    margin: 40px 0;
  }
  .landing__producer--item {
    text-align: center;
    max-width: 300px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .landing__producer--producers {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(4,1fr);
    justify-content: center;
    gap: 50px;
    flex-wrap: wrap;
    margin: 40px 0;
  }
  #youtubeIframe {
    margin-bottom: 30px;
  }
  .landing__claim--subtitle {
    margin-top: 30px;
  }
  .landing__producer--item_title {
    background: linear-gradient(to right,currentColor,currentColor) 0 min(100%, 1.35em) / 0 1px no-repeat;
    transition: background-size 0.3s ease-in-out, color 0.3s ease-in-out;
    width: fit-content;
    margin: 10px auto 0;
    opacity: 0.7;
  }
  .landing__producer--item_title:hover {
    background-size: 100% 1px;
    opacity: 1;
    color: #004228;
  }
  /* Media Queries */
  @media screen and (max-width: 768px) {
    .landing__producer--head_title {
      font-size: 48px;
    }
    .landing__producer--subtitle {
      font-size: 30px;
    }
    .landing__producer--boxes {
      flex-direction: column;
      align-items: center;
    }
    .landing__producer--item {
      margin-bottom: 20px;
    }
  }

  @media screen and (max-width: 480px) {
    .landing__producer--head_title {
      font-size: 36px;
    }
    .landing__producer--subtitle {
      font-size: 24px;
    }
  }
</style>
{% comment %}

{%- assign page_url = content_for_header
| split: '"pageurl":"'
| last
| split: '"'
| first
| split: request.host
| last
| replace: '\/', '/'
| replace: '%20', ' '
| replace: '\u0026', '&' -%}
{% assign param = blank %}

{%- for i in (1..1) -%}
{%- unless page_url contains '?' -%}
{% break %}
{%- endunless -%}
{%- assign query_string = page_url | split: '?' | last -%}
{%- assign qry_parts = query_string | split: '&' -%}

{%- for part in qry_parts -%}
{%- assign key_and_value = part | split: '=' -%}
{%- if key_and_value.size > 1 -%}
{% if key_and_value[0] == 'producer_id' %}
{% assign producer_id = key_and_value[1] %}
{% endif %}
{%- endif -%}
{%- endfor -%}
{%- endfor -%}
{% endcomment %}<script>
  document.addEventListener('DOMContentLoaded', function() {

// Obtener los parámetros de la URL
    var urlParams = new URLSearchParams(window.location.search);
    var producerId = urlParams.get('producer_id');

    handleproducerId(producerId);
  });

  async function handleproducerId(producerId) {
    const producerContent = document.getElementById('producerIDcontent');
    const generalContent = document.getElementById('noProducerIDcontent');

    if (producerId) { // Realizar acciones cuando producerId tiene un valor
      try {
        const response = await fetch(`https://ecotech.ecoterra.cl/api/ecofarmers/${producerId}`, {
          method: 'GET',
          credentials: 'omit' // Esto evita que las cookies se incluyan en la solicitud
        });
        const data = await response.json();
        const producer = data.producer;
        renderProducer(producer);
        renderMap(producer);

// Eliminar el div del DOM
        generalContent.parentNode.removeChild(generalContent);
        producerContent.classList.remove('d-none');
      } catch (error) {
        console.error("Error:", error);
      }
    } else { // Realizar acciones cuando producerId no tiene un valor
      const container = document.querySelector('.landing__producer--producers');
      try {
        const response = await fetch(`https://ecotech.ecoterra.cl/api/ecofarmers`, {
          method: 'GET',
          credentials: 'omit' // Esto evita que las cookies se incluyan en la solicitud
        });
        const data = await response.json();
        const producers = data.producers;
        producers.forEach(producer => {
          if(producer.claims.length){
            const producerElement = createProducerElement(producer);
            container.appendChild(producerElement);
          }
        });

// Eliminar el div del DOM
        producerContent.parentNode.removeChild(producerContent);
        generalContent.classList.remove('d-none');
      } catch (error) {
        console.error("Error:", error);
      }
    }
  }
</script>
<div id="producerIDcontent" class="d-none">
  <script>
    var currentInfoWindow = null;

    function renderProducer(producer) {
      const titleElement = document.querySelector('.landing__producer--head_title');
      const textElement = document.querySelector('.landing__producer--head_text');
      const imageElement = document.querySelector('#landing__producer--image');
     // const iframe = document.querySelector('#youtubeIframe');

// Actualizar el contenido de los elementos con la información del claim
      titleElement.textContent = producer.name;
      textElement.textContent = producer.description;
      imageElement.src = producer.imgUrl;
      imageElement.style = "100%";
     // iframe.src = producer.videoUrl;

// Iterar sobre cada productor y agregar sus elementos al contenedor
      const container = document.querySelector('.landing__producer--boxes');
      producer.claims.forEach(producer => {
        const producerElement = createClaimElement(producer);
        container.appendChild(producerElement);
      });
    }

    function renderMap(producer) {

// Coordenadas del centro del mapa

/* var center = {
      lat: -33.831550,
      lng: -70.706332
    };*/

// Opciones de configuración del mapa
      var mapOptions = {
        zoom: 10, // Nivel de zoom
        center: producer.location, // Centro del mapa
        zoomControl: false, // Ocultar control de zoom
        mapTypeControl: false
      };

// Crear mapa
      var map = new google.maps.Map(document.querySelector(`#map`), mapOptions);

// Iterar sobre los puntos y agregar marcadores al mapa
// points.forEach(function(point) {

      if (producer.location.absolute) { // Crear marcador
        var marker = new google.maps.Marker({position: producer.location, map: map, title: producer.name});

// Crear el contenido personalizado con HTML
        var contentString = '<div id="content" style="width: 200px; display:flex; flex-direction: column; gap: 10px">' + '<h2 id="firstHeading" class="firstHeading">' + producer.name + '</h2>' + '<p> Description </p>' + '</div>' + '<a href="' + producer.producerId + '"  target="_blank" rel="noopener noreferrer">Ver Documento</p>' + '</div>';

// Agregar evento click al marcador para mostrar información
        marker.addListener("click", function() {

// Cerrar el InfoWindow actualmente abierto, si existe
          if (currentInfoWindow) {
            currentInfoWindow.close();
          }

// Crear ventana de información
          var infoWindow = new google.maps.InfoWindow({content: contentString});

// Mostrar ventana de información
          infoWindow.open(map, marker);

// Actualizar la referencia al InfoWindow actualmente abierto
          currentInfoWindow = infoWindow;
        });
      } else {
        var circle = new google.maps.Circle({
          strokeColor: "#FF0000",
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: "#FF0000",
          fillOpacity: 0.35,
          map: map,
          center: producer.location,
          radius: 3000, // Radio del círculo en metros (puedes ajustar este valor)
        });

// Crear el contenido personalizado con HTML
        var contentString = '<div id="content" style="width: 200px; display:flex; flex-direction: column; gap: 10px">' + '<h2 id="firstHeading" class="firstHeading">' + producer.name + '</h2>' + '<p> Descripción </p>' + '</div>' + '<a href="' + producer.producerId + '"  target="_blank" rel="noopener noreferrer">Ver Documento</p>' + '</div>';

// Agregar evento click al círculo para mostrar información
        circle.addListener("click", function() {

// Crear ventana de información
          if (currentInfoWindow) {
            currentInfoWindow.close();
          }
          var infoWindow = new google.maps.InfoWindow({content: contentString});

// Mostrar ventana de información
          infoWindow.setPosition(producer.location);
          infoWindow.open(map);

// Actualizar la referencia al InfoWindow actualmente abierto
          currentInfoWindow = infoWindow;
        });
      }

/*
// Crear marcador
      var marker = new google.maps.Marker({position: producer.location, map: map, title: producer.name});


// // Crear el contenido personalizado con HTML
      var contentString = '<div id="content" style="width: 200px; display:flex; flex-direction: column; gap: 10px">' + '<h2 id="firstHeading" class="firstHeading">' + producer.name + '</h2>' + '<p>' + producer.description + '</p>' + '</div>' + '<a href="' + producer.producerId + '"  target="_blank" rel="noopener noreferrer">Ver Documento</p>' + '</div>';

// // Agregar evento click al marcador para mostrar información
      marker.addListener("click", function() {

//     // Crear ventana de información
        var infoWindow = new google.maps.InfoWindow({content: contentString});

//     // Mostrar ventana de información
        infoWindow.open(map, marker);
      });
*/
// });

    }

// Función para crear elementos HTML y agregarlos al contenedor
// Función para crear los elementos HTML para cada productor
    function createClaimElement(claim) {
      const div = document.createElement('a');
      div.classList.add('landing__producer--item');
      div.href = `/pages/claim-landing?claim_id=${
        claim.claimId
      }`;
      const img = document.createElement('img');
      img.src = claim.image;
      img.alt = "#";
      img.classList.add('landing__producer--item_img');
      img.style.maxWidth = "250px";
      img.style.maxHeight = "200px";

      const h3 = document.createElement('h3');
      h3.textContent = claim.claimName;
      h3.classList.add('landing__producer--item_title');

      div.appendChild(img);
      div.appendChild(h3);

      return div;
    }
  </script>

  <div id="producerContainer" class="landing__producer">
    <div class="container">

      <div class="landing__producer--head">
        <img id="landing__producer--image" src="" alt="">
        <h1 class="landing__producer--head_title text-center"></h1>
        <p class="landing__producer--head_text"></p>
        <!-- 
        <iframe
          id="youtubeIframe"
          width="560"
          height="315"
          src="https://www.youtube.com/embed/W5-RsmMzcT0"
          frameborder="0"
          allowfullscreen></iframe>
          -->
      </div>
      <h2 class="landing__claim--subtitle text-center">
        Nuestros sellos
      </h2>
      <div class="landing__producer--boxes"></div>
      <div id="map" style="height: 400px; width: 100%"></div>
    </div>
  </div>
</div>
<div id="noProducerIDcontent" class="d-none">
  <div class="landing__producer">
    <div class="container">
      <h1 class="landing__producer--head_title text-center">{{ section.settings.title }}</h1>
      <div class="landing__producer--head_text">{{ section.settings.text }}</div>
      <div class="landing__producer--producers"></div>
    </div>
  </div>
  <script>
    function createProducerElement(producer) {
      const div = document.createElement('a');
      div.classList.add('landing__producer--item');
      div.href = `/pages/producer-landing?producer_id=${
        producer.producerId
      }`
      const img = document.createElement('img');
      img.src = producer.imgUrl;
      img.alt = "#";
      img.classList.add('landing__producer--item_img');
      img.style.maxWidth = "250px";
      img.style.maxHeight = "200px";
      const h3 = document.createElement('h3');
      h3.textContent = producer.name;
      h3.classList.add('landing__producer--item_title');
      div.appendChild(img);
      div.appendChild(h3);

      return div;
    }
  </script>
</div>



{% schema %}
  {
    "name": "Landing Producer",
    "settings": [
      {
        "type": "text",
        "label": "Titulo",
        "id": "title",
        "default": "Nuestros Productores"
      }, {
        "type": "richtext",
        "label": "Texto principal",
        "id": "text",
        "default": "<p>Como ecoterra estamos orgullosos de trabajar juntos a nuestros productores comprometidos a cambiar el planeta. Lorem ipsum dolor sit amet consectetur adipisicing elit. Earum doloremque nihil architecto nam, libero rem dolore! Voluptates labore suscipit quas soluta neque, sint amet eius non excepturi tenetur reprehenderit ipsum.</p>"
      }
    ],
    "presets": [
      {
        "name": "Landing Producer",
        "category": "Landing",
        "settings": {}
      }
    ]
  }
{% endschema %}