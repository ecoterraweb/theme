<style>

  .cont_msj_registro {
    width: 100%;
    height: 100%;
    min-height: 60vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .cont_msj_registro div {
    display: block;
    width: 100%;
    padding: 2rem 1rem 3rem;
    border-radius: 12px;
    text-align: center;
  }

  .cont_msj_registro div.button_content {
    display: flex;
    flex-direction: row;
    justify-content: center;
    width: 100%;
  }

  .cont_msj_registro div.button_content a {
    margin: 1rem 0.8rem;
    padding: 0.4rem 2rem;
    border-radius: 8px;
    font-size: 1.2rem;
    font-weight: 800;
    text-decoration: none;
    color: rgb(255, 255, 255);
    background-color: rgb(2, 99, 56);
  }

  .cont_msj_registro div svg {
    margin: 1rem auto;
    width: 3rem;
    height: 3rem;
    color: rgb(64, 64, 64);
  }

  .cont_msj_registro div h2 {
    padding: 0 1rem;
    color: #004228;
    font-size: 1.8rem;
    font-weight: bold;
  }

  .cont_msj_registro div h3 {
    padding: 0 1rem;
    color: #ff6700;
    font-size: 1.4rem;
    font-weight: bold;
  }

  .cont_msj_registro div h4 {
    padding: 0.4rem 1rem;
    color: rgb(64, 64, 64);
    font-size: 1.2rem;
    font-weight: 600;
  }

  .cont_msj_registro div h4._info {
    font-weight: bold;
  }

  .cont_msj_registro div h4._info span {
    font-size: 1rem;
    font-weight: normal;
  }

  .cont_msj_registro div button {
    margin-top: 2rem;
  }

  .cont_msj_registro div h4._error,
  ._error {
    font-weight: bold;
    margin-left: 1.6rem;
    padding: 1rem 0;
    color: rgb(255, 37, 37);
  }

  .cont_msj_registro div h4._error span,
  ._error span {
    font-weight: normal;
    margin-left: 0.5rem;
  }

  .svg_loading {
    animation: rotating_svg 2s linear infinite;
  }

  @keyframes rotating_svg {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>
<div class="cont_msj_registro">
  <div class="msj_registro">
    {%- render 'icon' with 'loading' -%}
    <h4>Verificando estado del registro.</h4>
    <h4>Por favor espera un momento…</h4>
  </div>
</div>

<script>

    const cleanCart = async (_params) => {
        let _items = {};
        {% for line_item in cart.items %}
            _items['{{ line_item.id }}'] = 0;
        {% endfor %}

        // fetch(window.Shopify.routes.root + 'cart/clear.js', {
        fetch(window.Shopify.routes.root + 'cart/update.js', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({updates: _items})
            });
    }

    const sendRequest = async (_params) => {
        const _msj_registro = document.getElementsByClassName("msj_registro")[0];
        const formData = new FormData();

        formData.append('accion', 'crea_suscripcion');
        formData.append('customerId', _params.customer_id);
        formData.append('planId', _params.plan_id);

        console.log("customerId", _params.customer_id);
        console.log("planId", _params.plan_id);

        if(_params.customer_id && _params.customer_id.length > 1 
            && _params.plan_id && _params.plan_id.length > 1) {
            fetch('https://subscriptions.ecoterra.cl/suscripciones', {
                method: 'POST',
                body: formData
            })
                .then(res => {
                    return res.json();
                })
                .then(data => {
                    console.log("respondio");
                    console.log(data);
                    setTimeout(() => {
                        if (data.response == 1) {
                            if (data.pagook) {
                                _msj_registro.innerHTML = data.pagook;
                                cleanCart();
                            } else {
                                _msj_registro.innerHTML = `<h4 class="_error">¡No se pudo completar la suscripción!</h4>`;
                            }
                        } else {
                            _msj_registro.innerHTML = `<h4 class="_error">Ocurrio un error: <br /> <span>${data.msg}</span></h4>`;
                        }
                    }, 3000);
                })
                .catch(error => {
                    console.log("Ocurrio un error");
                    console.log({ "response": -1, "msg": error.toString() });
                    setTimeout(() => {
                        _msj_registro.innerHTML = `<h4 class="_error">Ocurrio un error: <br /><span>${error.toString()}</span></h4>`;
                    }, 3000);
                });
        } else {
            _msj_registro.innerHTML = `<h4 class="_error">Ocurrio un error: <br /><span>Los parametros son incorrectos</span></h4>`;
        }
    }

    const getParams = () => {
        let query = window.location.href;
        let pair = query.split("/").pop();
        let parametros = atob(pair).split("|");
        let customer_id = parametros[0];
        let plan_id = parametros[1];

        sendRequest({plan_id, customer_id});
    }

    window.addEventListener('load', function () {
        getParams();
    });
</script>


{% schema %}
  {
    "name": "Resultado del registro",
    "settings": [
      {
        "type": "textarea",
        "id": "msg_result",
        "label": "Mensaje de espera",
        "default": "Verificando estado del registro, por favor espera un momento…"
      }
    ]
  }
{% endschema %}