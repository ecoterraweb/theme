{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
BUY BUTTONS
----------------------------------------------------------------------------------------------------------------------

This component is used to show the buy buttons

********************************************
Supported variables
********************************************

* product: the product from which to show the buttons
* show_payment_button: if we show or not the dynamic checkout button
* show_gift_card_recipient: for gift card products, an optional message/email to be sent to the recipient
* button_size: the size of the button (default to xl if none is passed)
* atc_button_background: the background of the ATC button
* atc_button_text_color: the text color of the ATC button
* payment_button_background: the custom dynamic checkout button background
* payment_button_text_color: the custom dynamic checkout button text color
* form_id: if specified, define the form ID linked to this input
{%- endcomment -%}

{%- assign variant_picker_block = section.blocks | where: 'type', 'variant_picker' | first -%}

{%- form 'product', product, is: 'product-form', id: form_id -%}

    {% assign productTags = product.tags | join: '|' %}
        {% if productTags contains 'Suscripción' %}
            <style>
                .opciones_de_recurrencia {
                   display: block; 
                }

                .opciones_de_recurrencia label {
                    display: flex;
                    flex-flow: row nowrap;
                    align-items: center;
                    width: min-content;
                    margin: 0;
                    padding: 0.3rem 1rem;
                    font-size: 1rem;
                    white-space: nowrap;
                    line-height: 1;
                    cursor: pointer;
                }

                .opciones_de_recurrencia label._cont_select {
                    display: none;
                    margin-left: 3rem;
                    flex-direction: column;
                    align-items: flex-start;
                }

                .opciones_de_recurrencia label span {
                    font-weight: 500;
                    font-size: 1rem;
                    line-height: 1;
                }

                .opciones_de_recurrencia input[type="radio"] {
                    margin-right: 0.6rem;
                    width: 20px;
                    height: 20px;
                }
                
                .opciones_de_recurrencia select {
                    margin-left: 1rem;
                    padding: 0.4rem 0.3rem 0.4rem 0.2rem;
                    font-size: 1rem;
                    cursor: pointer;
                    outline: none;
                }
            </style>
            <div class="opciones_de_recurrencia">
                <label>
                    <input type="radio" name="properties[_tipo_compra]" value="normal" onchange="cambiaTipo(this)" checked>
                    <span>Compra única</span>
                </label>
                <label>
                    <input type="radio" name="properties[_tipo_compra]" value="recurrente" onchange="cambiaTipo(this)">
                    <span>Suscripción</span>
                </label>
                <label class="_cont_select" id="cont_sel_frecuencia">
                    Frecuencia
                    <select name="properties[Frecuencia]" id="sel_frecuencia">
                        <option value="Semanal">Cada semana</option>
                        <option value="Cada 2 semanas">Cada 2 semanas</option>
                        <option value="Mensual">Cada mes</option>
                    </select>
                </label>
                <label class="_cont_select" id="cont_sel_dias">
                    Días de entrega
                    <select name="properties[Día entrega]" id="sel_dias">
                        <option>Lunes</option>
                        <option>Martes</option>
                        <option>Miércoles</option>
                        <option>Jueves</option>
                        <option>Viernes</option>
                    </select>
                </label>
                <br>
            </div>
            <script>
                const _cont_sel_frecuencia = document.getElementById("cont_sel_frecuencia");
                const _cont_sel_dias = document.getElementById("cont_sel_dias");
                const _sel_frecuencia = document.getElementById("sel_frecuencia");
                const _sel_dias = document.getElementById("sel_dias");
                _sel_frecuencia.value = "";
                _sel_dias.value = "";

                const cambiaTipo = (_this) => {
                    if(_this.value === "recurrente") {
                        _cont_sel_frecuencia.style.display = "flex";
                        _cont_sel_dias.style.display = "flex";
                        _sel_frecuencia.value = "Semanal";
                        _sel_dias.value = "Lunes";
                    } else {
                        _cont_sel_frecuencia.style.display = "none";
                        _cont_sel_dias.style.display = "none";
                        _sel_frecuencia.value = "";
                        _sel_dias.value = "";
                    }
                }
            </script>
        {% else %}
            <input type="hidden" name="properties[_tipo_compra]" value="normal">
        {% endif %}
        
  <input type="hidden" {% if variant_picker_block != blank %}disabled{% endif %} name="id" value="{{ product.selected_or_first_available_variant.id }}">

  {%- assign button_disabled = false -%}
  {%- assign button_size = button_size | default: 'xl' -%}

  {%- if product.selected_or_first_available_variant.available -%}
    {%- if product.template_suffix contains 'pre-order' -%}
      {%- capture button_content -%}{{ 'product.general.pre_order_button' | t }}{%- endcapture -%}
    {%- else -%}
      {%- capture button_content -%}{{ 'product.general.add_to_cart_button' | t }}{%- endcapture -%}
    {%- endif -%}
  {%- else -%}
    {%- capture button_content -%}{{ 'product.general.sold_out_button' | t }}{%- endcapture -%}
    {%- assign button_disabled = true -%}
  {%- endif -%}

  <div class="v-stack gap-4">
    {%- if product.gift_card? and show_gift_card_recipient -%}
      <gift-card-recipient class="gift-card-recipient v-stack gap-3">
        {%- assign checkbox_label = 'gift_card.recipient.checkbox' | t -%}
        {%- render 'checkbox', label: checkbox_label, name: 'properties[__shopify_send_gift_card_to_recipient]' -%}

        <div class="gift-card-recipient__fields js:hidden">
          <div class="fieldset">
            {%- liquid
              assign recipient_email_label = 'gift_card.recipient.email_label' | t
              render 'input', type: 'email', label: recipient_email_label, name: 'properties[Recipient email]', value: form.email, required: true

              assign recipient_name_label = 'gift_card.recipient.name_label' | t
              render 'input', label: recipient_name_label, name: 'properties[Recipient name]', value: form.name

              assign message_label = 'gift_card.recipient.message_label' | t
              render 'input', label: message_label, name: 'properties[Recipient message]', value: form.message, multiline: 3, maxlength: 200, show_max_characters_count: true
            -%}
          </div>
        </div>
      </gift-card-recipient>
    {%- endif -%}

    <buy-buttons class="buy-buttons {% if show_payment_button %}buy-buttons--multiple{% endif %}" template="{{ product.template_suffix | escape }}" form="{{ form_id }}">
      {%- render 'button', content: button_content, type: 'submit', size: button_size, disabled: button_disabled, secondary: show_payment_button, subdued: button_disabled, background: atc_button_background, text_color: atc_button_text_color -%}

      {%- if show_payment_button -%}
        {{- form | payment_button -}}

        <style>
          #shopify-section-{{ section.id }} .shopify-payment-button {
          {%- unless product.selected_or_first_available_variant.available -%}
            display: none;
          {%- endunless -%}

          {%- if payment_button_background != blank and payment_button_background != 'rgba(0,0,0,0)' -%}
            --button-background: {{ payment_button_background.rgb }};
          {%- endif -%}

          {%- if payment_button_text_color != blank and payment_button_text_color != 'rgba(0,0,0,0)' -%}
            --button-text-color: {{ payment_button_text_color.rgb }};
          {%- endif -%}
          }
        </style>
      {%- endif -%}
    </buy-buttons>
  </div>
{%- endform -%}